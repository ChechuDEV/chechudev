---
interface Props {
    action: string;
}

const { action } = Astro.props;
---
<div class="accordion">
    <a class="accordion-toggle">{ action } &darr;</a>

    <div class="accordion-content">
        <slot/>
    </div>
</div>
<script>
    const accordion: HTMLElement | null = document.querySelector('.accordion');
    const content: HTMLElement | null = document.querySelector('.accordion-content');
    if (!accordion || !content) {
        throw new Error('Accordion component is missing required elements');
    }
    if (!content.style) {
        throw new Error('Accordion component requires CSS');
    }
    content.style.transition = 'max-height 0.2s ease-in-out';
    accordion.addEventListener('click', () => {
        if (content.style.maxHeight === '0px' || content.style.maxHeight === '') {
            content.style.maxHeight = `${content.scrollHeight}px`;
        } else {
            content.style.maxHeight = '0';
        }
    });
</script>
<style>
    .accordion {
        padding: 0 1em;
        border-left: 1px solid var(--accent-color);
    }

    .accordion-toggle {
        display: block;
        text-decoration: none;
        color: var(--accent-color);
        cursor: pointer;
        user-select: none;
    }

    .accordion-content {
        max-height: 0;
        overflow: hidden;
    }

    @media print {
        .accordion {
            border: none;
            padding: 0;
        }
        .accordion-toggle {
            display: none;
        }
        .accordion-content {
            max-height: none;
            overflow: visible;
        }
    }
</style>